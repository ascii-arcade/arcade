package arcade

var bigCharacters = map[rune][]string{
	'A': {
		"░█████╗░",
		"██╔══██╗",
		"███████║",
		"██╔══██║",
		"██║░░██║",
		"╚═╝░░╚═╝",
	},
	'B': {
		"██████╗░",
		"██╔══██╗",
		"██████╦╝",
		"██╔══██╗",
		"██████╦╝",
		"╚═════╝░",
	},
	'C': {
		"░█████╗░",
		"██╔══██╗",
		"██║░░╚═╝",
		"██║░░██╗",
		"╚█████╔╝",
		"░╚════╝░",
	},
	'D': {
		"██████╗░",
		"██╔══██╗",
		"██║░░██║",
		"██║░░██║",
		"██████╔╝",
		"╚═════╝░",
	},
	'E': {
		"███████╗",
		"██╔════╝",
		"█████╗░░",
		"██╔══╝░░",
		"███████╗",
		"╚══════╝",
	},
	'F': {
		"███████╗",
		"██╔════╝",
		"█████╗░░",
		"██╔══╝░░",
		"██║░░░░░",
		"╚═╝░░░░░",
	},
	'G': {
		"░██████╗░",
		"██╔════╝░",
		"██║░░██╗░",
		"██║░░╚██╗",
		"╚██████╔╝",
		"░╚═════╝░",
	},
	'H': {
		"██╗░░██╗",
		"██║░░██║",
		"███████║",
		"██╔══██║",
		"██║░░██║",
		"╚═╝░░╚═╝",
	},
	'I': {
		"██╗",
		"██║",
		"██║",
		"██║",
		"██║",
		"╚═╝",
	},
	'J': {
		"░░░░░██╗",
		"░░░░░██║",
		"░░░░░██║",
		"██╗░░██║",
		"╚█████╔╝",
		"░╚════╝░",
	},
	'K': {
		"██╗░░██╗",
		"██║░██╔╝",
		"█████═╝░",
		"██╔═██╗░",
		"██║░╚██╗",
		"╚═╝░░╚═╝",
	},
	'L': {
		"██╗░░░░░",
		"██║░░░░░",
		"██║░░░░░",
		"██║░░░░░",
		"███████╗",
		"╚══════╝",
	},
	'M': {
		"███╗░░░███╗",
		"████╗░████║",
		"██╔████╔██║",
		"██║╚██╔╝██║",
		"██║░╚═╝░██║",
		"╚═╝░░░░░╚═╝",
	},
	'N': {
		"███╗░░██╗",
		"████╗░██║",
		"██╔██╗██║",
		"██║╚████║",
		"██║░╚███║",
		"╚═╝░░╚══╝",
	},
	'O': {
		"░█████╗░",
		"██╔══██╗",
		"██║░░██║",
		"██║░░██║",
		"╚█████╔╝",
		"░╚════╝░",
	},
	'P': {
		"██████╗░",
		"██╔══██╗",
		"██████╔╝",
		"██╔═══╝░",
		"██║░░░░░",
		"╚═╝░░░░░",
	},
	'Q': {
		"░██████╗░",
		"██╔═══██╗",
		"██║██╗██║",
		"╚██████╔╝",
		"░╚═██╔═╝░",
		"░░░╚═╝░░░",
	},
	'R': {
		"██████╗░",
		"██╔══██╗",
		"██████╔╝",
		"██╔══██╗",
		"██║░░██║",
		"╚═╝░░╚═╝",
	},
	'S': {
		"░██████╗",
		"██╔════╝",
		"╚█████╗░",
		"░╚═══██╗",
		"██████╔╝",
		"╚═════╝░",
	},
	'T': {
		"████████╗",
		"╚══██╔══╝",
		"░░░██║░░░",
		"░░░██║░░░",
		"░░░██║░░░",
		"░░░╚═╝░░░",
	},
	'U': {
		"██╗░░░██╗",
		"██║░░░██║",
		"██║░░░██║",
		"██║░░░██║",
		"╚██████╔╝",
		"░╚═════╝░",
	},
	'V': {
		"██╗░░░██╗",
		"██║░░░██║",
		"╚██╗░██╔╝",
		"░╚████╔╝░",
		"░░╚██╔╝░░",
		"░░░╚═╝░░░",
	},
	'W': {
		"░██╗░░░░░░░██╗",
		"░██║░░██╗░░██║",
		"░╚██╗████╗██╔╝",
		"░░████╔═████║░",
		"░░╚██╔╝░╚██╔╝░",
		"░░░╚═╝░░░╚═╝░░",
	},
	'X': {
		"██╗░░██╗",
		"╚██╗██╔╝",
		"░╚███╔╝░",
		"░██╔██╗░",
		"██╔╝╚██╗",
		"╚═╝░░╚═╝",
	},
	'Y': {
		"██╗░░░██╗",
		"╚██╗░██╔╝",
		"░╚████╔╝░",
		"░░╚██╔╝░░",
		"░░░██║░░░",
		"░░░╚═╝░░░",
	},
	'Z': {
		"███████╗",
		"╚════██║",
		"░░███╔═╝",
		"██╔══╝░░",
		"███████╗",
		"╚══════╝",
	},
	'0': {
		"░█████╗░",
		"██╔══██╗",
		"██║░░██║",
		"██║░░██║",
		"╚█████╔╝",
		"░╚════╝░",
	},
	'1': {
		"░░███╗░░",
		"░████║░░",
		"██╔██║░░",
		"╚═╝██║░░",
		"███████╗",
		"╚══════╝",
	},
	'2': {
		"██████╗░",
		"╚════██╗",
		"░░███╔═╝",
		"██╔══╝░░",
		"███████╗",
		"╚══════╝",
	},
	'3': {
		"██████╗░",
		"╚════██╗",
		"░█████╔╝",
		"░╚═══██╗",
		"██████╔╝",
		"╚═════╝░",
	},
	'4': {
		"░░██╗██╗",
		"░██╔╝██║",
		"██╔╝░██║",
		"███████║",
		"╚════██║",
		"░░░░░╚═╝",
	},
	'5': {
		"███████╗",
		"██╔════╝",
		"██████╗░",
		"╚════██╗",
		"██████╔╝",
		"╚═════╝░",
	},
	'6': {
		"░█████╗░",
		"██╔═══╝░",
		"██████╗░",
		"██╔══██╗",
		"╚█████╔╝",
		"░╚════╝░",
	},
	'7': {
		"███████╗",
		"╚════██║",
		"░░░░██╔╝",
		"░░░██╔╝░",
		"░░██╔╝░░",
		"░░╚═╝░░░",
	},
	'8': {
		"░█████╗░",
		"██╔══██╗",
		"╚█████╔╝",
		"██╔══██╗",
		"╚█████╔╝",
		"░╚════╝░",
	},
	'9': {
		"░█████╗░",
		"██╔══██╗",
		"╚██████║",
		"░╚═══██║",
		"░█████╔╝",
		"░╚════╝░",
	},
	'!': {
		"██╗",
		"██║",
		"██║",
		"╚═╝",
		"██╗",
		"╚═╝",
	},
	' ': {
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
		"  ",
	},
	'?': {
		"░█████╗░",
		"██╔══██╗",
		"╚═╝███╔╝",
		"░░░╚══╝░",
		"░░░██╗░░",
		"░░░╚═╝░░",
	},
}

var smallCharacters = map[rune][]string{
	'A': {
		"▄▀█",
		"█▀█",
	},
	'B': {
		"█▄▄",
		"█▄█",
	},
	'C': {
		"█▀▀",
		"█▄▄",
	},
	'D': {
		"█▀▄",
		"█▄▀",
	},
	'E': {
		"█▀▀",
		"██▄",
	},
	'F': {
		"█▀▀",
		"█▀░",
	},
	'G': {
		"█▀▀",
		"█▄█",
	},
	'H': {
		"█░█",
		"█▀█",
	},
	'I': {
		"█",
		"█",
	},
	'J': {
		"░░█",
		"█▄█",
	},
	'K': {
		"█▄▀",
		"█░█",
	},
	'L': {
		"█░░",
		"█▄▄",
	},
	'M': {
		"█▀▄▀█",
		"█░▀░█",
	},
	'N': {
		"█▄░█",
		"█░▀█",
	},
	'O': {
		"█▀█",
		"█▄█",
	},
	'P': {
		"█▀█",
		"█▀▀",
	},
	'Q': {
		"█▀█",
		"▀▀█",
	},
	'R': {
		"█▀█",
		"█▀▄",
	},
	'S': {
		"█▀",
		"▄█",
	},
	'T': {
		"▀█▀",
		"░█░",
	},
	'U': {
		"█░█",
		"█▄█",
	},
	'V': {
		"█░█",
		"▀▄▀",
	},
	'W': {
		"█░█░█",
		"▀▄▀▄▀",
	},
	'X': {
		"▀▄▀",
		"█░█",
	},
	'Y': {
		"█▄█",
		"░█░",
	},
	'Z': {
		"▀█",
		"█▄",
	},
	'0': {
		"█▀█",
		"█▄█",
	},
	'1': {
		"▄█",
		"░█",
	},
	'2': {
		"▀█",
		"█▄",
	},
	'3': {
		"▀▀█",
		"▄██",
	},
	'4': {
		"█░█",
		"▀▀█",
	},
	'5': {
		"█▀",
		"▄█",
	},
	'6': {
		"█▄▄",
		"█▄█",
	},
	'7': {
		"▀▀█",
		"░░█",
	},
	'8': {
		"",
		"",
	},
	'9': {
		"█▀█",
		"▀▀█",
	},
	'!': {
		"█",
		"▄",
	},
	' ': {
		" ",
		" ",
	},
	'?': {
		"▀█",
		"░▄",
	},
}

func getHeight(big bool) int {
	if big {
		return len(bigCharacters['A'])
	} else {
		return len(smallCharacters['A'])
	}
}

func getCharacter(c rune, big bool) []string {
	res := make([]string, getHeight(big))

	if big {
		if chr, ok := bigCharacters[c]; ok {
			for i := range res {
				res[i] = chr[i]
			}
		} else {
			panic("unknown character " + string(c))
		}
	} else {
		if chr, ok := smallCharacters[c]; ok {
			for i := range res {
				res[i] = chr[i]
			}
		} else {
			panic("unknown character " + string(c))
		}
	}

	return res
}

func generateText(text string, big bool) []string {
	res := make([]string, getHeight(big))

	for _, c := range text {
		ch := getCharacter(c, big)

		for i := range res {
			res[i] += ch[i]

			if !big {
				res[i] += " "
			}
		}
	}

	if !big {
		for i := range res {
			res[i] = res[i][:len(res[i])-1]
		}
	}

	return res
}
